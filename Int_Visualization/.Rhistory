evidence=list(Class = "malignant"), method = "lw")
samples.asia1
w <- attr(samples.asia1, 'weights')
w
breast.bpe$Bare.nuclei$prob[,"malignant"]
set.seed(0)
ep <- cpquery(breast.bpe,
event = (Cell.shape >= 7 & Bare.nuclei == "10" & Class == "malignant"),
evidence = TRUE)
ep
set.seed(0)
ep <- cpquery(breast.bpe,
event = (Cell.shape >= 7 & Bare.nuclei == "10" & Class == "malignant"),
evidence = TRUE)
ep
0.09*100
set.seed(0)
ep <- cpquery(breast.bpe,
event = (Cell.shape <= 7 & Bare.nuclei == "10" & Class == "malignant"),
evidence = TRUE)
ep
0.12*100
set.seed(0)
epl <- cpquery(, event = (Class == "malignant" & dysp == ),
evidence = list(Cell.shape = '10'), method = 'lw'epl)
set.seed(0)
epl <- cpquery(samples.asia1, event = (Class == "malignant" & Bare.nucle == "10" ),
evidence = list(Cell.shape = '10'), method = 'lw'epl))
set.seed(0)
epl <- cpquery(samples.asia1, event = (Class == "malignant" & Bare.nucle == "10" ),
evidence = list(Cell.shape = '10'), method = 'lw'epl)
set.seed(0)
epl <- cpquery(samples.asia1, event = (Class == "malignant" & Bare.nucle == "10" ),
evidence = list(Cell.shape = '10'), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Bare.nucle == "10" ),
evidence = list(Cell.shape = '10'), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Bare.nuclei == "10" ),
evidence = list(Cell.shape = '10'), method = 'lw')
epl
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Bare.nuclei == "10" ),
evidence = list(Cell.shape >=7), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Bare.nuclei == "10" ),
evidence = list(Cell.shape >= "7"), method = 'lw')
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Bare.nuclei == "10" ),
evidence = list(Cell.shape >= 7), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Bare.nuclei == "10" ),
evidence = list(Cell.shape = '10'), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Cell.shape >= '7' ),
evidence = list(Bare.nuclei == "10"), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Cell.shape >= '7' ),
evidence = list(Bare.nuclei = "10"), method = 'lw')
epl
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Cell.shape >= '7' ),
evidence = list(Bare.nuclei), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Cell.shape >= '7' ),
evidence = list(Bare.nuclei = 5), method = 'lw')
set.seed(0)
epl <- cpquery(breast.bpe, event = (Class == "malignant" & Cell.shape >= '7' ),
evidence = list(Bare.nuclei = "5"), method = 'lw')
epl
save.image("C:/Users/leang/OneDrive/Maestría/I Semestre/Machine Learning/Tarea/Assignment 2/BreastCancer.Rda.RData")
install.packages("spatstat")
library(spatstat)
spatstat::data
spatstat::datasets
spatstat::("datasets")
spatstat"datasets")
spatstat.data::spiders
spatstat.data::chicago
spatstat.data::flu
spatstat.data::spiders
bd <- spatstat.data::spiders
spiders
spiders$data
spiders$ctype
spiders$domain
bd$data
plot(bd, main = NULL)
str(bd)
summary(bd)
?rescale()
bd2 <- rescale(bd,1,"cm")
bd3 <- rescale(bd)
summary(bd2)
summary(bd3)
bd2 <- rescale(bd,0.1,"cm")
summary(bd2)
bd2 <- rescale(bd,10,"cm")
summary(bd2)
intesity(bd)
intensity(bd)
int <- intensity(bd)
sqrt(int/area(Window(bd)))
?quadratcount()
quadratcount(bd)
quadratcount(bd, nx=2, ny=2)
quadratcount(spiders)
quadratcount.ppp(spiders)
quadratcount.ppp(spiders, nx=2, ny=2)
str(bd)
quadratcount.splitppp(spiders, nx=2, ny=2)
quadratcount(cells, nx=2, ny=2)
quadratcount(spiders, nx=2, ny=2)
str(spatstat.data::chorley)
chorley
str(spatstat.data::humberside)
humberside
bd <- spatstat.data::humberside
plot(bd, main = NULL)
spatstat.data::humberside
summary(bd)
spatstat.data::gorillas
spatstat.data::sporophores
bd <- spatstat.data::sporophores
plot(bd, main = NULL)
spatstat.data::waka
bd <- spatstat.data::waka
plot(bd, main = NULL)
str(bd)
summary(bd)
intensity(bd)
int <- intensity(bd)
sqrt(int/area(Window(bd)))
quadratcount(bd, nx=2, ny=2)
quadratcount(bd)
quadratcount(bd, nx=3, ny=3)
quadratcount(bd)
quadratcount(bd)
quadratcount(bd, nx=2, ny=2)
quadratcount(bd, nx=3, ny=3)
q <- quadratcount(bd, nx=2, ny=2)
intensity(q)
plot(quadratcount(bd), add = TRUE)
plot(bd, main = NULL)
mucosa
str(mucosa)
str(bd)
plot(quadratcount(bd), add = TRUE)
plot(quadratcount(bd), add = TRUE, color = "Blue")
plot(quadratcount(bd), add = TRUE, color = "Blue")
quadrat.test(bd)
plot(quadratcount(bd), add = TRUE, color = "Red")
plot(quadratcount(bd), add = TRUE)
plot(quadrat.test(bd), add = TRUE)
quadrat.test(bd, nx=2, ny=2)
quadrat.test(bd, nx=3, ny=3)
d <- density(bd, edge = TRUE, kernel="gaussian")
plot(d, main = NULL)
miplot(bd)
fryplot(bd)
fryplot(bd, main = NULL)
Kest(bd)
plot(k)
k <- Kest(bd)
plot(k)
plot(Lest(bd))
plot(pcf(bd))
fc <- Fest(bd)
plot(fc)
a <- capture.output(plot(envelope(bd, Fest, nsim = 39),
main = NULL, legend = FALSE))
g <- Gest(bd)
plot(g)
j <- Jest(bd)
plot(j)
summary(bd)
str(bd)
waka
waka$window
waka$marks
waka$markformat
waka$y
waka$n
waka
plot(distmap(bd))
save.image("C:/Users/leang/OneDrive/Maestría/I Semestre/Machine Learning/Tarea/Assignment 3/Data.RData")
load("C:/Users/leang/OneDrive/Maestría/I Semestre/Machine Learning/Tarea/Assignment 3/Data.RData")
plot(bd, main = NULL)
plot(bd, main = NULL)
bd <- spatstat.data::waka
plot(bd)
plot(bd)
str(bd)
waka <- spatstat.data::waka
plot(waka)
str(waka)
waka
summary(bd)
spatstat.data::waka
summary(bd)
str(waka)
intensity(bd)
library(spatstat)
intensity(bd)
summary(waka)
str(waka)
intensity(bd)
sqrt(int/area(Window(bd)))
quadratcount(bd)
quadratcount(bd, nx=2, ny=2)
q <- quadratcount(bd, nx=2, ny=2)
intensity(waka)
int <- intensity(waka)
sqrt(int/area(Window(waka)))
quadratcount(waka)
plot(quadratcount(waka), add = TRUE)
quadratcount(waka)
q <- quadratcount(waka)
intensity(q)
quadrat.test(bd)
plot(quadrat.test(bd), add = TRUE)
d <- density(waka, edge = TRUE, kernel="gaussian")
plot(d, main = NULL)
quadrat.test(waka)
miplot(bd)
miplot(waka)
fryplot(waka)
?Fest()
?Gest()
?Kest()
allstats(waka)
allstats(bd)
plot(fc)
plot(fc, main = NULL)
plot(g, main = NULL)
plot(j, main = NULL)
plot(k, main = NULL)
DB <- read.csv("data/nba_2017_br", header = TRUE, sep = ",")
DB <- read.csv("C:/Archivos_personales\data", header = TRUE, sep = ",")
DB <- read.csv("C:/Archivos_personales/data/nba_2017_br", header = TRUE, sep = ",")
DB <- read.csv(C:/Archivos_personales/data/nba_2017_br, header = TRUE, sep = ",")
DB <- read.csv('C:/Archivos_personales/data/nba_2017_br', header = TRUE, sep = ",")
DB <- read.csv2('C:/Archivos_personales/data/nba_2017_br', header = TRUE, sep = ",")
DB <- read.csv("C:/Archivos_personales/data/nba_2017_br")
setwd("C:/Archivos_personales")
bd <- read.csv(file = "data/nba_2017_br")
bd <- read.csv(file = "data/nba_2017_br.csv")
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br.xml", header = TRUE, sep = ",")
bd <- read.table(file = "data/nba_2017_br", header = TRUE)
bd <- read.table(file = "data/nba_2017_br.xlxs", header = TRUE)
bd <- read.table(file = "data/nba_2017_br.xlsx", header = TRUE)
View(bd)
bd <- read.table(file = "data/nba_2017_br.xlsx", header = TRUE)
bd <- read.table(file = "data/nba_2017_br.txt", header = TRUE)
setwd("C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/Final assigment/Int_Visualization")
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
View(bd)
str(bd)
shiny::runApp()
runApp()
runApp()
runApp()
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
runApp()
runApp()
runApp()
runApp()
runApp()
?plotOutput
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-5')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/stockVis')
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-2')
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-2')
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-2')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/stockVis')
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/stockVis')
library(ggplot2)
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-1-HelloWorld')
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Graph <- bd[,c(2,11)]
View(Graph)
View(bd)
runApp()
runApp()
runApp()
View(bd)
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Graph <- bd[,c(2,5,6,10)]
View(Graph)
View(bd)
View(bd)
runApp()
runApp()
runApp('C:/Users/leang/OneDrive/Maestría/I Semestre/Visualization/1th Assignment Visualization/App-1-HelloWorld')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?reactive
?reactive()
runApp()
runApp()
?getSymbols()
library("readr")
library(shiny)
runApp()
library("ggplot2")
runApp()
bd <- read.csv(file = "data/nba_2017_br.csv", header = TRUE, sep = ",")
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
input$select
runApp()
runApp()
runApp()
selected_tm = as.numeric(input$select)
dataInput <- reactive({
selected_tm = as.numeric(input$select)
return(bd[bd$Tm==selected_tm,])
dataInput <- reactive({
selected_tm = as.numeric(input$select)
return(bd[bd$Tm==selected_tm,])
})
dataInput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyr)
runApp()
library(plyr)
runApp()
runApp()
runApp()
runApp()
runApp()
?switch()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?subset
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?replace()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
runApp()
View(bd)
runApp()
shiny::runApp()
View(bd)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(bd)
runApp()
runApp()
shiny::runApp()
